openapi: 3.0.0
info:
  title: Training Session API
  version: 1.0.0
  description: API for managing training sessions and gyms.

tags:
  - name: TrainingSession
    description: Operations related to training sessions.
  - name: Gym
    description: Operations related to gyms.

paths:
  /training-sessions:
    post:
      summary: Create an individual training session.
      tags: [TrainingSession]
      parameters:
        - name: trainerId
          in: query
          required: true
          schema:
            type: integer
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: startTime
          in: query
          required: true
          schema:
            type: string
            format: time
        - name: endTime
          in: query
          required: true
          schema:
            type: string
            format: time
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: integer
        - name: X-User-Roles
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Training session created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingSession'
        '400':
          description: Invalid input data.

    get:
      summary: Retrieve all training sessions.
      tags: [TrainingSession]
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: integer
        - name: X-User-Roles
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of all training sessions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainingSession'
        '400':
          description: Invalid input data.

  /training-sessions/staging:
    get:
      summary: Retrieve training sessions with staging status.
      tags: [TrainingSession]
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: integer
        - name: X-User-Roles
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of training sessions with staging status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainingSession'
        '400':
          description: Invalid input data.

  /training-sessions/respond:
    patch:
      summary: Respond to a training session.
      tags: [TrainingSession]
      parameters:
        - name: sessionId
          in: query
          required: true
          schema:
            type: integer
        - name: accept
          in: query
          required: true
          schema:
            type: boolean
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: integer
        - name: X-User-Roles
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Training session updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingSession'
        '403':
          description: Access denied.
        '400':
          description: Invalid input data.

  /gyms:
    get:
      summary: Get all gyms
      tags: [Gym]
      responses:
        '200':
          description: List of all gyms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GymDTO'

  /gyms/{id}:
    get:
      summary: Get gym by ID
      tags: [Gym]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Gym details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GymDTO'

  /gyms/{id}/group-class-offerings:
    get:
      summary: Get group class offerings for a gym
      tags: [Gym]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of group class offerings for the gym
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GymGroupClassOfferingDTO'

  /gyms/{gymId}/add-trainer/{userId}:
    post:
      summary: Add trainer to gym
      tags: [Gym]
      parameters:
        - name: gymId
          in: path
          required: true
          schema:
            type: integer
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Trainer added to gym
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponseDTO'

  /gyms/{gymId}/trainers:
    get:
      summary: Get trainers by gym
      tags: [Gym]
      parameters:
        - name: gymId
          in: path
          required: true
          schema:
            type: integer
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of trainers for the gym
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainerSummaryDTO'

  /gyms/{gymId}/group-classes:
    get:
      summary: Get group classes by gym
      tags: [Gym]
      parameters:
        - name: gymId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of group classes for the gym
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupClassScheduleDTO'

components:
  schemas:
    TrainingSession:
      type: object
      properties:
        id:
          type: integer
        trainerId:
          type: integer
        userId:
          type: integer
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        classId:
          type: integer
        type:
          type: string
          enum:
            - INDIVIDUAL
            - GROUP
        status:
          type: string
          enum:
            - STAGING
            - CONFIRMED
            - REJECTED

    GymDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string
        # Add other properties as in your GymDTO class

    GymGroupClassOfferingDTO:
      type: object
      # Add properties as in your GymGroupClassOfferingDTO class

    UserProfileResponseDTO:
      type: object
      # Add properties as in your UserProfileResponseDTO class

    TrainerSummaryDTO:
      type: object
      # Add properties as in your TrainerSummaryDTO class

    GroupClassScheduleDTO:
      type: object
      # Add properties as in your GroupClassScheduleDTO class
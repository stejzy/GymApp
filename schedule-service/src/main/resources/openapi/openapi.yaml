openapi: 3.0.0
info:
  title: Training Session API
  version: 1.0.0
  description: API for managing training sessions and gyms.

tags:
  - name: TrainingSession
    description: Operations related to training sessions.
  - name: Gym
    description: Operations related to gyms.
  - name: RecurringGroupClassSchedule
    description: Operations related to recurring group class schedules
  - name: GroupClassSchedule
    description: Operations related to single group class schedules

paths:
  /training-sessions/create-individual:
    post:
      summary: Create an individual training session.
      tags: [TrainingSession]
      parameters:
        - name: trainerId
          in: query
          required: true
          schema:
            type: integer
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: startTime
          in: query
          required: true
          schema:
            type: string
            format: time
        - name: endTime
          in: query
          required: true
          schema:
            type: string
            format: time
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: integer
        - name: X-User-Roles
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Training session created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingSession'
        '400':
          description: Invalid input data.

  /training-sessions/all:
    get:
      summary: Retrieve all training sessions.
      tags: [TrainingSession]
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: integer
        - name: X-User-Roles
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of all training sessions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainingSession'
        '400':
          description: Invalid input data.

  /training-sessions/staging:
    get:
      summary: Retrieve training sessions with staging status.
      tags: [TrainingSession]
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: integer
        - name: X-User-Roles
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of training sessions with staging status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainingSession'
        '400':
          description: Invalid input data.

  /training-sessions/respond:
    patch:
      summary: Respond to a training session.
      tags: [TrainingSession]
      parameters:
        - name: sessionId
          in: query
          required: true
          schema:
            type: integer
        - name: accept
          in: query
          required: true
          schema:
            type: boolean
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: integer
        - name: X-User-Roles
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Training session updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingSession'
        '403':
          description: Access denied.
        '400':
          description: Invalid input data.

  /gyms:
    get:
      summary: Get all gyms
      tags: [Gym]
      responses:
        '200':
          description: List of all gyms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GymDTO'

  /gyms/{id}:
    get:
      summary: Get gym by ID
      tags: [Gym]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Gym details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GymDTO'

  /gyms/{id}/group-class-offerings:
    get:
      summary: Get group class offerings for a gym
      tags: [Gym]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of group class offerings for the gym
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GymGroupClassOfferingDTO'

  /gyms/{gymId}/add-trainer/{userId}:
    post:
      summary: Add trainer to gym
      tags: [Gym]
      parameters:
        - name: gymId
          in: path
          required: true
          schema:
            type: integer
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Trainer added to gym
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponseDTO'

  /gyms/{gymId}/trainers:
    get:
      summary: Get trainers by gym
      tags: [Gym]
      parameters:
        - name: gymId
          in: path
          required: true
          schema:
            type: integer
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of trainers for the gym
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainerSummaryDTO'

  /gyms/{gymId}/group-classes:
    get:
      summary: Get group classes by gym
      tags: [Gym]
      parameters:
        - name: gymId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of group classes for the gym
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupClassScheduleDTO'

  /schedule/add-recurring-group-class:
    post:
      summary: Add a recurring group class schedule
      tags: [RecurringGroupClassSchedule]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRecurringGroupClassScheduleDTO'
      responses:
        '200':
          description: Recurring group class schedule added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRecurringGroupClassScheduleDTO'

  /schedule/get-recurring-group-classes/{id}:
    get:
      summary: Get recurring group class schedules by gym ID
      tags: [RecurringGroupClassSchedule]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of recurring group class schedules for the gym
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseRecurringGroupClassScheduleDTO'

  /schedule/get-all-recurring-group-classes:
    get:
      summary: Get all recurring group class schedules
      tags: [RecurringGroupClassSchedule]
      responses:
        '200':
          description: List of all recurring group class schedules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseRecurringGroupClassScheduleDTO'

  /singleGroupClass/add-group-class:
    post:
      summary: Add a single group class schedule
      tags: [ GroupClassSchedule ]
      parameters:
        - name: gymGroupClassOfferingId
          in: query
          required: true
          schema:
            type: integer
        - name: trainerId
          in: query
          required: true
          schema:
            type: integer
        - name: startTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: capacity
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Created group class schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupClassScheduleDTO'

  /singleGroupClass/{scheduleId}/signup:
    post:
      summary: Sign up a user for a group class
      tags: [ GroupClassSchedule ]
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: integer
        - name: X-User-Id
          in: header
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Updated group class schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupClassScheduleDTO'

  /singleGroupClass/all-group-classes-dto:
    get:
      summary: Get all group class schedules
      tags: [ GroupClassSchedule ]
      responses:
        '200':
          description: List of group class schedules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupClassScheduleDTO'

  /singleGroupClass/{scheduleId}/participants:
    get:
      summary: Get profiles of group class participants
      tags: [ GroupClassSchedule ]
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: integer
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of participant profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileResponseDTO'


components:
  schemas:
    TrainingSession:
      type: object
      properties:
        id:
          type: integer
        trainerId:
          type: integer
        userId:
          type: integer
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        classId:
          type: integer
        type:
          type: string
          enum:
            - INDIVIDUAL
            - GROUP
        status:
          type: string
          enum:
            - STAGING
            - CONFIRMED
            - REJECTED

    GymDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        city:
          type: string
        address:
          type: string
        phoneNumber:
          type: string
        openingHour:
          type: string
          format: time
        closingHour:
          type: string
          format: time

    GroupClassDefinitionDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string

    GymGroupClassOfferingDTO:
      type: object
      properties:
        id:
          type: integer
        gym:
          $ref: '#/components/schemas/GymDTO'
        groupClassDefinition:
          $ref: '#/components/schemas/GroupClassDefinitionDTO'

    UserProfileResponseDTO:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
        height:
          type: number
          format: double
        weight:
          type: number
          format: double
        birthday:
          type: string
          format: date
        phone:
          type: string
        level:
          type: string
        bio:
          type: string
        avatarUrl:
          type: string
        roles:
          type: array
          items:
            type: string

    TrainerSummaryDTO:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        bio:
          type: string
        roles:
          type: array
          items:
            type: string

    GroupClassScheduleDTO:
      type: object
      properties:
        id:
          type: integer
        gymGroupClassOfferingName:
          type: string
        trainerId:
          type: integer
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        participantIds:
          type: array
          items:
            type: integer
        capacity:
          type: integer

    RequestRecurringGroupClassScheduleDTO:
      type: object
      properties:
        gymGroupClassOfferingId:
          type: integer
        trainerId:
          type: integer
        dayOfWeek:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        frequency:
          type: string
          enum:
            - DAILY
            - WEEKLY
            - BIWEEKLY
            - MONTHLY
        capacity:
          type: integer

    ResponseRecurringGroupClassScheduleDTO:
      type: object
      properties:
        id:
          type: integer
        gymGroupClassOffering:
          $ref: '#/components/schemas/GymGroupClassOfferingDTO'
        trainerId:
          type: integer
        dayOfWeek:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        frequency:
          type: string
          enum:
            - DAILY
            - WEEKLY
            - BIWEEKLY
            - MONTHLY
        capacity:
          type: integer